<!-- Spotify CDN Setup -->
<script src="https://sdk.scdn.co/spotify-player.js"></script>
<!-- Spotify Connect Creation -->
 <script>
	 let player;
	window.onSpotifyWebPlaybackSDKReady = () => {
		const token = '<%= @current_user.access_token %>';

		player = new Spotify.Player( {
			name: 'Spectrify',
			getOAuthToken: callback => { callback( token ); }
		} );

		// Error handling
		player.addListener( 'initialization_error', ( { message } ) => { console.error( message ); } );
		player.addListener( 'authentication_error', ( { message } ) => { console.error( message ); } );
		player.addListener( 'account_error', ( { message } ) => { console.error( message ); } );
		player.addListener( 'playback_error', ( { message } ) => { console.error( message ); } );

		// Playback status updates
		player.addListener( 'player_state_changed', state => { console.log( state ); } );

		// Ready
		player.addListener( 'ready', ( { device_id } ) => {
		console.log( 'Ready with Device ID', device_id );
		} );

		// Not Ready
		player.addListener( 'not_ready', ( { device_id } ) => {
		console.log( 'Device ID has gone offline', device_id );
		} );

		// Connect to the player!
		player.connect()
			.then( success => {
				if ( success ) {
					console.log('The Web Playback SDK successfully connected to Spotify!')
				}
			} );
	};

 </script>

<!-- p5 -->
 <script>
	// let audioGrab;
 	let amplitude;
 	// let volume;

 	function setup() {
		createCanvas( windowWidth, windowHeight );
		frameRate(30);
 		// new audio in
 		// audioGrab = new p5.AudioIn();
		// turn on listener
 		// audioGrab.start();

 		// amplitude = new p5.Amplitude();
 		// amplitude.getLevel;
 	}

 	function draw() {
 		vol = audioGrab.getLevel();

 		background( 0 );
 		ellipse( windowWidth / 2, windowHeight / 2, 250 + vol * 500, 250 + vol * 500 );
 	}

 	function windowResized() {
 		resizeCanvas( windowWidth, windowHeight );
 	}
 </script>
